[["index.html", "Tutorials for Tidymass shinyapp 1 Installation 1.1 Install R and Rstudio 1.2 (For Mac User) Install Cario 1.3 Install Tidymass shinyapp 1.4 Install docker version", " Tutorials for Tidymass shinyapp 1 Installation Tidymass shinyapp is a user-friendly web application for Tidymass that requires little or no programming experience. The app can be installed via code, docker and server, and we will introduce how to do that step by step in this chapter. 1.1 Install R and Rstudio To begin with, you need to install R and Rstudio, both of which can be free downloaded from official websites. If you have installed them before, please ensure that R version &gt; 4.1 as tidymass required, ohterwise download and install the latest version of R. Install R Download R and install it. Install Rstudio Download Rstudio and install it. Open the Rstudio 1.2 (For Mac User) Install Cario Cairo is a 2D graphics library used by R for high-quality plots and needed for Tidymass Shinyapp. On macOS, it requires the X11 system, which is not installed by default. You can follow the following steps if you haven’t install Cairo. First, visit the official website of XQuartz and install it, and this will restart your computer. Next, you can install Cairo by running the code in Rstudio: install.packages(&quot;Cairo&quot;, type = &quot;source&quot;) If the installation is successful, you should be able to library it: library(Cairo) 1.3 Install Tidymass shinyapp First, you are recommended to install Tidymass with the following code. For more information and guidance, please refer to Tidymass Website remotes::install_gitlab(&quot;tidymass/tidymass&quot;) Second, install the necessary packages: if (!require(&#39;remotes&#39;)) install.packages(&#39;remotes&#39;); if (!require(&#39;tidyverse&#39;)) install.packages(&#39;tidyverse&#39;); if (!require(&#39;writexl&#39;)) install.packages(&quot;writexl&quot;); if (!require(&#39;hexbin&#39;)) install.packages(&#39;hexbin&#39;) if (!require(&#39;ComplexUpset&#39;))install.packages(&#39;ComplexUpset&#39;); if (!require(&#39;shinyalert&#39;))install.packages(&#39;shinyalert&#39;); if (!require(&#39;shinyFiles&#39;)) remotes::install_github(&#39;thomasp85/shinyFiles&#39;); if (!require(&#39;shinyWidgets&#39;)) remotes::install_github(&quot;dreamRs/shinyWidgets&quot;); if (!require(&#39;shiny&#39;)) install.packages(&#39;shiny&#39;); if (!require(&#39;bsicons&#39;)) install.packages(&#39;bsicons&#39;); if (!require(&#39;bslib&#39;)) install.packages(&#39;bslib&#39;); if (!require(&#39;plotly&#39;)) install.packages(&#39;plotly&#39;); if (!require(&#39;colourpicker&#39;)) install.packages(&#39;colourpicker&#39;); if (!require(&#39;massdbbuildin&#39;)) remotes::install_github(&#39;tidymass/massdbbuildin&#39;) if (!require(&#39;massdatabase&#39;)) remotes::install_gitlab(&quot;jaspershen/massdatabase&quot;) Finally, install Tidymass shinyapp with the code: remotes::install_github(&#39;tidymass/tidymass_shiny&#39;) To start the Tidymass shinyapp: library(tidyverse) library(tidymass) library(tidymassshiny) run_tidymass_shiny() You should be able to see: 1.4 Install docker version Docker, a group of platform as a service (PaaS) products, uses OS-level virtualization to provide software in containers. It’s useful for individuals who want to share the code, data, and analysis environment with others to repeat their analysis and results. We provide a docker version of tidymass shinyapp, all the packages in tidymass shinyapp and the dependent packages have been installed. Install docker You can refer the the official website to download the docker. Then run docker. Pull the tidymassshiny image Open your terminal (on Windows, use Command Prompt, PowerShell, or Windows Terminal) and type the following command: docker pull tidymass/tidymassshiny:latest Get the path of the demo data Since the Shiny app utilizes shinyFiles to obtain file or folder paths, you need to mount your working directory into the Docker image when running the Docker version of tidymassshiny. Here are instructions. For macOS systems, you can get the path for the demo data from Get Info, the path may look like /Users/yijiang/Desktop/Demo_data. For Windows OS, the path may look like C:\\Users\\Yijiang\\Documents. Here you need to copy Your Own Path. Ensure Docker Desktop has permission to demo data Ensure Docker Desktop has permission to access the drive containing your working directory: Open Docker Desktop. Go to Settings &gt; Resources &gt; File Sharing. Add the drive or folder (e.g., /Users/yijiang/Desktop/Demo_data) to the shared folders list. Click Apply &amp; Restart. Please make sure the demo file has the required permissions before proceeding to the next steps. Here are some guidance for Mac and Windows. Here replace /Users/yijiang/Desktop/Demo_data with your own path that you just give permission to the Docker Desktop. docker run -p 3838:3838 -v /Users/yijiang/Desktop/Demo_data:/home tidymass/tidymassshiny:latest This command achieves two purposes: - Starts the Docker image. - Mounts your working directory to the /home path within the container. Running the Application In terminal, a series of R package loading information will be printed. Until you see the prompt below, tidymassshiny has been successfully running： R version 4.3.3 (2024-02-29) -- &quot;Angel Food Cake&quot; ... ... ... ## Until this message show up. Listening on http://0.0.0.0:3838 Then open the browser (Google，Firefox，Edge or Safari), paste the address http://localhost:3838 in the address bar, and the web page can jump to the tidymass shinyapp page. Enjoy your metabolomic data analysis process! "],["upstream-data-processing.html", "2 Upstream data processing 2.1 Data format converter 2.2 Project initiate 2.3 Data import 2.4 Data quality assessment 2.5 Data cleaning", " 2 Upstream data processing To perform multiple analysis with Tidymass shinyapp, you need to upload files first, the demo data can be downloaded through Google Drive or BaiduNetdisk. 2.1 Data format converter If your data is in raw format, you may first convert it to .mzML or .mzXML format using ProteoWizard. Please note that ProteoWizard only support Windows OS, you may consider massconverter if you don’t use Windows OS. You can refer to the following parameter settings for ProteoWizard. 2.2 Project initiate Here are the steps you need to follow to initiate the project: Set working directory Upload sample_info.csv file You may click the dropdown button and adjust the column names if there are any changes for them. Click “Initialize Project” button and check the sample information. 2.3 Data import Here we provide three different methods to upload the files. Method 1: Upload Ms file If you have raw data in the format like .mzML or mzXML. You can click on ‘Start with Ms file’ to upload the file. Before importing the data, please make sure the files are properly organized according to sample type, such as QC and Subject. Click the dropdown button Data import and select Start with MS file. Then click SELECT MS1 FOLDER and choose the MS1 folder. Next, click CHECK INPUT FILE and a prompt will appear if the files have been successfully uploaded. After the files are ready for analysis, you can choose to set peak picking parameters yourself. Here are some important parameters: ppm: Peak detection ppm. peakwidth: Peak width. It is dependent on your column and LC system. snthresh: Signal to noise threshold. noise: Noise cutoff. threads: The core number for performing. For more details, please refer to massprocesser. If you want to use the recommended parameters, just click Start to proceed with further optimization (This may take a long time, please be patient). This will find the best ppm cutoff and run with it to perform the optimization. Finally, click Start peak picking and get the results. Method 2: Upload table file If your data is a post-peak metabolite expression matrix, you can click on the ‘Start with table file’ button to upload the data. The sample table is as follows, and the first four columns must exist, with column names not to be changed. Click the dropdown button Data import and select Start with table file. Then click BROWSE and select the csv table. Next, click INPUT FILE SUMMARY and you will see the statistics of input file, such as QC Samples, Subject Samples and Total Features. If all the check have passed, click Generate massdataset object to obtain massdataset objects for both positive and negative modes. Method 3: Upload mass_dataset file If you already have massdataset objects generated by Tidymass, you can simply upload them. Upload objects for positive and negative modes separately and click Check input 2.4 Data quality assessment To have an overall understanding and assessment of the data, you can select Overview and click START to generate multiple plots, including peak distribution, missing value summary and missing value in samples etc. Here you can also adjust parameters and download these plots. Meaning of generated plots Peak distribution: The distribution of detected metabolic features across retention time and m/z, with point size indicating feature intensity. Check missing value: The percentage of missing values across all samples and variables. Missing value in samples: The percentage of missing values in samples. Missing value in variables: The percentage of missing values in variables. RSD distribution: The percentage of features in QC samples with relative standard deviations (RSD) below given thresholds, here the rsd cutoff defaults to 30% and can be adjusted. Intensity for all the variables: The distribution of intensities across all variables for each sample. PCA: PCA plot of the dataset, which can be colored by sample_id, injection_order and batch etc. Sample correlation: The correlation score between different groups, here three correlation methods can be selected: spearman, kendall and pearson. 2.5 Data cleaning Before metabolite annotation, it’s necessary to perform data cleaning as various bias may exist in sample preparation and data acquisition. It can be divided into different steps such as noisy feature removal and outlier samples removal. For more details, please refer to masscleaner. Remove noisy metabolic features The first step is removing noisy metabolic features. Here we choose to remove variables who have MV in more than 20% QC samples and in at lest 50% samples in control group or case group, so the MV cutoff of QC samples (%) has been set as 20 and MV cutoff (%) has been set as 50. Click Start to remove these noisy metabolites. Next, you can visualize the MV percentage of samples for QC group, Subject group or both of them by click Show plot. Filter outlier samples When analyzing large cohorts, outlier samples can be a serious problem. In this step, we will filter these outlier samples. Before filtering outlier samples, you can click Start above to show the plot for Missing value in samples and PCA plot. In Tidymass shinyapp, we provide multiple options to filter outliers, you may select different strategies according to your requirement. For more information, please refer to this blog. For “By tidymass” strategy, four remove outlier conditions are provided: according to NA (according_to_na), accoriding to standard deviation for principal component (pc_sd), according to mean abosolute deviation for principal component (pc_mad) and according to distance (according_to_distance). For “By myself” strategy, the outliers for both positive and negative modes are set to be “none”. Click Start below to filter outlier samples. Missing value imputation Here you can select many different methods for missing value imputation, including knn, missforest (mf) and ppca etc. Parameters For knn k: the parameters can be modified include number of neighbors. Defaults to 10. rowmax: maximum row missing proportion. Defaults to 0.5. colmax: maximum column missing proportion. Defaults to 0.8. maxp: maximum prediction proportion. Defaults to 1500. rng.seed: random number generator seed. For missForest (rf) maxiter: the parameters include maximum iterations. Defaults to 10. ntree: number of trees. Defaults to 100. decreasing: whether to interpolate missing values in order from most to least number of missing values. Defaults to FALSE. For ppca nPcs: the parameters can be modified include number of principal components. Defaults to 2. maxSteps: maximum steps for iterations. Defaults to 100. threshold: convergence threshold. Defaults to 1e-04. If the method has been chosen and all the parameters have been set, click START to perform missing value imputation. Data normalization and integration To remove unwanted analytical variations and integrate multiple batches forming an integral data set for subsequent statistical analysis, we need to perform data normalization and integration. Here we provide several methods to be selected, including QC sample-based data normalization like svr and loess and sample-wise method like pqn, median, mean and total intensity normalization. Parameters keep_scale: whether to keep the original scale of the data during the data standardization process. Defaults to TRUE. optimization: whether to enable optimization steps in the standardization process. Defaults to TRUE. pqn_reference: the reference value selected for using the Probabilistic Quotient Normalization method. Defaults to median. begin_value: the start value for parameter search range. Defaults to 0.5. end_value: the end value for parameter search range. Defaults to 1. step_value: the increment at each step of the parameter search. Defaults to 0.2. multiple: the standardized factors used to control multiples. Defaults to 1. threads: the number of threads for normalization. Defaults to 1. Click Start analysis to perform the normalization and integration (The step may take some time, please be patient). Then click Show plot to visualize the difference before and after the normalization. "],["downstream-data-processing.html", "3 Downstream data processing 3.1 Metabolite annotation 3.2 Annotation filtering 3.3 Metabolites origin 3.4 Differential Accumulated Metabolites (DAM) 3.5 Enrichment", " 3 Downstream data processing 3.1 Metabolite annotation Metabolite annotation can be performed based on in-house and available open-source databases. To begin with, you need to click Select MS2 folder and import prepared MS2 data. These files should be in the format of “.mgf”, and they should be stored separately for negative and positive modes. Parameters column: A character vector specifying the column types. Default is “rp”. ms1.ms2.match.mz.tol: Numeric, the m/z tolerance for matching MS1 and MS2. Default is 15. ms1.ms2.match.rt.tol: Numeric, the retention time tolerance for matching MS1 and MS2. Default is 30. Once you have set the parameters, click Start to import MS2 data. Next, you can choose suitable parameters for metabolite annotation. Parameters ms1.match.ppm: A numeric value specifying the mass accuracy threshold for MS1 matching in parts per million (ppm). Defaults to 25. ms2.match.ppm: A numeric value specifying the mass accuracy threshold for MS2 (Fragment ion) matching in ppm. Defaults to 30. rt.match.tol: A numeric value specifying the retention time matching tolerance in seconds. Defaults to 30. candidate.num: A numeric value specifying the number of top candidates to retain per feature. Defaults to 3. column: A character string specifying the chromatographic column type, either “rp” (reverse phase) or “hilic”. Defaults to “rp”. threads: An integer specifying the number of threads to use for parallel processing. Defaults to 3. We need necessary MS2 databases for metabolite annotation, and here we provide some common in-house databases such as Mona, Massbank and HMDB. More MS2 compound databases can be downloaded from Tidymass Website. After the download is complete, place them in a new folder and click Choose folder. Click Start annotation to begin the job (The job will start about 10s after you click the button, don’t click again!). 3.2 Annotation filtering The annotation results are assigned conﬁdence levels according to MSI (in-house database, level 1; public MS2 database, level 2; MS1 database, level 3). After obtaining annotation results, you can choose how to keep multiple annotations, how to remove redundancy and how to keep annotation levels. Click Adduct for level 3 annotation and select suitable models and methods, then click START to perform annotation filtering. 3.3 Metabolites origin The metabolites origin module can help us determine the origin of annotated metabolites. First, you need to click “Check database” and then you can click “Start” to perform the analysis. You will see the Upset plot on the right, which demonstrates the overall distribution of origins and their intersection for all the compounds. If you are interested in the origin of a specific compound you can select the corresponding row and click Show network plot. Here you can also see the visualized result (need to scroll down). 3.4 Differential Accumulated Metabolites (DAM) To begin with, click Wake up object to wake up the massdataset object. You need to select the sample attribute and here we use group as an example. Then set the second group as Control and click Start. The corresponding PCA plot and Volcano plot will be illustrated on the right. You can set parameters like Log2(FoldChange), P-value (cutoff based on p-value) and FDR (cutoff based on Adjusted p-value). 3.5 Enrichment Two types of pathway data are provided: KEGG pathway and HMDB pathway. You may also choose to upload the custom database by clicking Upload custom database. Here you can set the p value adjust methods and p-value cutoff. You may also change the threads to accelerate the job. Barplot and Enrich scatter plot are provided to show the pathway enrichment. "],["tidymass-shiny-toolkits.html", "4 Tidymass shiny Toolkits 4.1 Feature-based Pathway Analysis (FPA) 4.2 Metabolite database construction 4.3 KEGG Pathway Database Construction 4.4 Metabolite ID Conversion", " 4 Tidymass shiny Toolkits 4.1 Feature-based Pathway Analysis (FPA) The metabolic feature-based functional module analysis approach can significantly expands biological interpretation beyond MS2 spectra-based annotated metabolites. You may refer to Tidymass Website for detailed documentation. 4.2 Metabolite database construction If you have in-house standards which have been acquired with MS2 spectra data, then you can construct the in-house MS2 spectra databases using the MetID package. There are no specific requirements on how to run the LC/MS data for users. As the in-house database construction in metid is used for users to get the in-house databases for themselves (including m/z, retention time and MS/MS spectra of metabolites, for level 1 annotation (Sumner et al., 2007)), so the users just need to run the standards using the same column, LC-gradient, and MS settings with their real samples in the lab Data preparation In Tidymass shinyapp, we provide a dedicated module for in-house database construction. To prepare your workflow, please follow the comprehensive step-by-step instructions available at: https://metid.tidymass.org/articles/database_construction Construct in-house database with MS2 spectra Selec input file Click the File Path button Select a CSV-formatted file containing metabolite metadata. 2. Configure Database Parameters - Navigate to the Construction Parameters tab - Review and adjust database-specific details - Click the Build Database button to initiate the process Result Verification &amp; Database Export Spectral information will be displayed in the main interface (verify key metadata like m/z values and retention times) Assign a unique identifier to your custom database (eg: “demo_inhouse_database”) Click Download Database to save the compiled database to your local system Workflow Execution: Place the downloaded database file (.rda, R Data format) into a dedicated empty directory During the Metabolite Annotation phase of the workflow: ‣ Click Choose Folder ‣ Navigate to the directory containing your custom database Initiate the annotation process by clicking the Start Annotation button 4.3 KEGG Pathway Database Construction When the research subject is not human, constructing a species-specific KEGG pathway database becomes essential for conducting enrichment analysis. The KEGG database contains comprehensive metabolic pathway data for various organisms, including 1,169 eukaryotes, 9,208 bacteria, and 449 archaea (refer to KEGG Organisms List). Researchers should first identify their target species’ organism code (e.g., hsa for Homo sapiens, mmu for Mus musculus, ath for Arabidopsis thaliana) from this resource. The tidymass shiny provides a dedicated module for constructing species-specific pathway databases using these organism codes. The generated pathway database can subsequently be applied to metabolite KEGG pathway enrichment analysis through either the tidymass shiny interface or tidymass R programming. Operational Workflow Directory Preparation Create a dedicated working directory (e.g., kegg_pathway_db). Navigate to the KEGG Pathway Database Construction tool under the Tidymass Shiny Toolkits dropdown menu in the tidymass shiny interface. Workspace Configuration Click Set working directory in the sidebar’s Data Input section Select the newly created kegg_pathway_db directory Parameter Settings Under the Parameters section: Enter the target organism code (case-sensitive) Set sleep time between 1-1.5 seconds (minimum 1s to prevent server overload) Initiate download by clicking Download pathway Execution Monitoring A progress bar will appear in the lower-right interface Real-time KEGG pathway data retrieval requires stable internet connectivity If interruptions occur: Verify network connection Consider increasing sleep interval Completion Verification Upon successful database construction: The main interface displays execution logs File paths of generated databases are explicitly shown This automated process ensures reproducible creation of organism-specific KEGG pathway resources while maintaining compliance with KEGG server access protocols. Use your pathway database in KEGG enrichment analysis In the annotation results, you will find that Pathway IDs adopt the organism code (e.g., dme) from your custom database as their prefix. This confirms that your provided database was successfully utilized during the KEGG enrichment analysis. 4.4 Metabolite ID Conversion Metabolites often possess distinct identifiers across analytical databases, necessitating cross-platform ID translation. Tidymass Shiny offers integrated solutions for this purpose: Established Services CTS - Chemical Translation Service by Fiehn Lab ChemSpider chemical structure resolver Experimental AI-Powered Conversion Utilizes OpenAI’s language models (caution: non-finetuned LLMs may generate unreliable outputs; use judiciously) API Requirements ChemSpider: Register API key OpenAI: Obtain API credentials Operational Protocol Step 1: Platform Selection Under Convert Parameters, choose a translation service Step 2: Input Configuration Source Identification Enter query term in Source ID Type (autocompletion suggests compatible databases) Example: Select Chemical Name Target Specification Choose output format in Target ID Type (e.g., HMDB ID) Step 3: Execution Input compound identifiers in Conversion Input Click Convert ID Step 4: Output Retrieval Translated IDs display in tabular/JSON format after computational latency Failed mappings highlight discrepancies for manual verification "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
